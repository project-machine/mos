on:
  push:
  pull_request:
name: build
jobs:
  build:
    name: build
    runs-on: ubuntu-22.04
    steps:
      - name: Set up environment
        run: |
          mkdir ~/bin
          echo "PATH=$HOME/bin:$PATH" >> $GITHUB_ENV
      - name: Check out git
        uses: actions/checkout@v3
      - name: Set up golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            bats cryptsetup-bin libacl1-dev libarchive-tools \
            libcryptsetup-dev libgpgme-dev libcap-dev \
            libdevmapper-dev liblxc-dev libpam0g-dev \
            libseccomp-dev libsquashfs-dev lxc lxc-dev \
            make openssl squashfuse uidmap umoci
      - name: setup lxc
        run: |
          chmod ugo+x $HOME
          cat /etc/subuid /etc/subgid
          u=$(id -un) && g=$(id -gn)
          echo "u=$u g=$g"
          uidmap=$(awk -F: '$1 == u { print $2, $3 }' "u=$u" /etc/subuid)
          gidmap=$(awk -F: '$1 == g { print $2, $3 }' "g=$g" /etc/subgid)
          if [ "$u" = "runner" ] && [ -z "$gidmap" ]; then
            # 'id -gn' shows docker, but 'runner' is in subgid
            g="runner"
            gidmap=$(awk -F: '$1 == g { print $2, $3 }' "g=$g" /etc/subgid)
          fi
          echo "uidmap=$uidmap."
          echo "gidmap=$gidmap."
          [ -n "$uidmap" ] && [ -n "$gidmap" ] ||
              { echo "did not get uidmap or gidmap for u=$u g=$g"; exit 1; }
          mkdir -p ~/.config/lxc/
          echo "writing .config/lxc/default.conf"
          tee ~/.config/lxc/default.conf <<EOF
          lxc.include = /etc/lxc/default.conf
          lxc.idmap = u 0 $uidmap
          lxc.idmap = g 0 $gidmap
          EOF

          echo "writing /etc/lxc/lxc-usernet"
          echo "$u veth lxcbr0 100" | sudo tee -a /etc/lxc/lxc-usernet
      - name: install stacker
        run: |
          wget -O ~/bin/stacker --progress=dot:mega https://github.com/project-stacker/stacker/releases/download/v1.0.0-rc2/stacker
          chmod 755 ~/bin/stacker
      - name: install skopeo
        run: |
          wget -O ~/bin/skopeo --progress=dot:mega https://github.com/project-machine/tools/releases/download/v0.0.1/skopeo
          chmod 755 ~/bin/skopeo
      - name: make
        run: |
          go get -v ./...
          make
      - name: test
        run: |
          timeout 20m make test ||
              echo "Ignoring error in 'make test' [exit code $?]"
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            mosctl
            mosb
